"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[857],{61232:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>p});var n=a(68102),o=(a(63696),a(19916));const i={sidebar_position:2,hide_title:!1,sidebar_label:"Getting Started",title:"Getting Started",image:"https://jamestasse.tech/wp-content/uploads/2024/05/satellite-reentry-cropped.png"},s=void 0,r={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"Prerequisites",source:"@site/docs/getting-started.mdx",sourceDirName:".",slug:"/getting-started",permalink:"/docusaurus-openapi-docs/getting-started",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,hide_title:!1,sidebar_label:"Getting Started",title:"Getting Started",image:"https://jamestasse.tech/wp-content/uploads/2024/05/satellite-reentry-cropped.png"},sidebar:"ORC",previous:{title:"Welcome",permalink:"/docusaurus-openapi-docs/"},next:{title:"Orbital Refuse Collector (ORC) API",permalink:"/docusaurus-openapi-docs/orbital-refuse-collector-orc-api"}},l={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup",id:"setup",level:2},{value:"Usage",id:"usage",level:2}],c={toc:p},g="wrapper";function d(e){let{components:t,...i}=e;return(0,o.yg)(g,(0,n.A)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("head",null,(0,o.yg)("link",{rel:"apple-touch-icon",href:"/apple-touch-icon.png"})),(0,o.yg)("div",{align:"left"},(0,o.yg)("img",{width:"200",src:"https://jamestasse.tech/wp-content/uploads/2024/05/satellite-reentry-cropped.png"})),(0,o.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"Postman client ",(0,o.yg)("br",null),(0,o.yg)("br",null),(0,o.yg)("blockquote",{parentName:"li"},(0,o.yg)("p",{parentName:"blockquote"},(0,o.yg)("strong",{parentName:"p"},"NOTE"),":  You can use either the ",(0,o.yg)("a",{parentName:"p",href:"https://www.postman.com/downloads/"},"Postman desktop client")," or web client (",(0,o.yg)("a",{parentName:"p",href:"https://www.postman.com/product/workspaces/"},"see Postman workspaces"),"). However, this guide will focus on the user experience in the Postman desktop client."))),(0,o.yg)("li",{parentName:"ol"},"An internet connection")),(0,o.yg)("h2",{id:"setup"},"Setup"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Begin by downloading the ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/jtj-inc/docusaurus-openapi-docs/blob/main/demo/examples/ORC.yaml"},"ORC API specification"),".\n",(0,o.yg)("img",{alt:"Downloading the API specification",src:a(2204).A,width:"1267",height:"368"}))),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Next, import the ORC API specification into Postman."),(0,o.yg)("blockquote",{parentName:"li"},(0,o.yg)("p",{parentName:"blockquote"},(0,o.yg)("strong",{parentName:"p"},"NOTE"),": for instructions on how to import an API spec into Postman, see ",(0,o.yg)("a",{parentName:"p",href:"https://learning.postman.com/docs/designing-and-developing-your-api/importing-an-api/"},"Importing an API"),"."))),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"In Postman you should now have a collection with the name ",(0,o.yg)("inlineCode",{parentName:"p"},"Orbital Refuse Collector (ORC) API"),"."),(0,o.yg)("p",{parentName:"li"},(0,o.yg)("img",{alt:"Expected view of Postman collection after import",src:a(51765).A,width:"367",height:"263"})))),(0,o.yg)("h2",{id:"usage"},"Usage"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"Verify that the collection was imported correctly by sending a request. For this example I will send the ",(0,o.yg)("inlineCode",{parentName:"li"},"Get a list of satellites")," request, but you can test with any request."),(0,o.yg)("li",{parentName:"ol"},"Upon receiving a response, verify the following: ",(0,o.yg)("br",null),"\na. The response status code was 200. ",(0,o.yg)("br",null),"\nb. You received back either a list of satellite objects in the response body or no response body (depending upon which request you tested). ",(0,o.yg)("br",null),(0,o.yg)("br",null),(0,o.yg)("img",{alt:"Expected view of Postman upon receiving response",src:a(13058).A,width:"1714",height:"855"}))),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},(0,o.yg)("strong",{parentName:"p"},"NOTE"),": By default this collection uses a ",(0,o.yg)("a",{parentName:"p",href:"https://wiremock.org/"},"Wiremock")," server to simulate all endpoints. If you would like to change this behavior, you can modify the ",(0,o.yg)("inlineCode",{parentName:"p"},"baseUrl")," value in the collection's variables."),(0,o.yg)("h2",{parentName:"blockquote",id:"baseurl-configuration"},(0,o.yg)("img",{alt:"baseUrl configuration",src:a(56700).A,width:"891",height:"354"}))))}d.isMDXComponent=!0},13058:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/200-after-initial-request-b5638546cf7726dd6ab97f61c4c588a3.png"},51765:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/Postman_ORC_Collection_Post-Import-4e26e2c080ec846a62ac7aa9ecd3bc50.png"},56700:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/baseUrl-6a145a26f3eda40c354814ba59325672.png"},2204:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/downloading-spec-45209a15b08582b1080f239198e5de28.png"}}]);