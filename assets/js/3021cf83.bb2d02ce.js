"use strict";(self.webpackChunkorc_docs=self.webpackChunkorc_docs||[]).push([[857],{1520:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/Postman_ORC_Collection_Post-Import-4e26e2c080ec846a62ac7aa9ecd3bc50.png"},8225:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"getting-started","title":"Getting Started","description":"<img","source":"@site/docs/getting-started.mdx","sourceDirName":".","slug":"/getting-started","permalink":"/docusaurus-openapi-docs/getting-started","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"hide_title":false,"sidebar_label":"Getting Started","title":"Getting Started","image":"https://jamestasse.tech/wp-content/uploads/2024/05/satellite-reentry-cropped.png"},"sidebar":"ORC","previous":{"title":"Introduction","permalink":"/docusaurus-openapi-docs/orbital-refuse-collector-orc-api"},"next":{"title":"Delete a satellite","permalink":"/docusaurus-openapi-docs/delete-satellite-by-id"}}');var i=s(74848),o=s(28453);const r={sidebar_position:2,hide_title:!1,sidebar_label:"Getting Started",title:"Getting Started",image:"https://jamestasse.tech/wp-content/uploads/2024/05/satellite-reentry-cropped.png"},a=void 0,l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup",id:"setup",level:2},{value:"Usage",id:"usage",level:2},{value:"baseUrl configuration",id:"baseurl-configuration",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",...(0,o.R)(),...e.components},{Head:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n,{children:(0,i.jsx)("link",{rel:"apple-touch-icon",href:"/apple-touch-icon.png"})}),"\n",(0,i.jsx)("div",{align:"left",children:(0,i.jsx)("img",{width:"200",src:"https://jamestasse.tech/wp-content/uploads/2024/05/satellite-reentry-cropped.png"})}),"\n",(0,i.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Postman client ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"NOTE"}),": You can use either the ",(0,i.jsx)(t.a,{href:"https://www.postman.com/downloads/",children:"Postman desktop client"})," or web client (",(0,i.jsx)(t.a,{href:"https://www.postman.com/product/workspaces/",children:"see Postman workspaces"}),"). However, this guide will focus on the user experience in the Postman desktop client."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.li,{children:"An internet connection"}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"setup",children:"Setup"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Begin by downloading the ",(0,i.jsx)(t.a,{href:"https://github.com/jtj-inc/docusaurus-openapi-docs/blob/main/demo/examples/ORC.yaml",children:"ORC API specification"}),".\r\n",(0,i.jsx)(t.img,{alt:"Downloading the API specification",src:s(55009).A+"",width:"1267",height:"368"})]}),"\n",(0,i.jsxs)(t.li,{children:["Next, import the ORC API specification into Postman.","\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"NOTE"}),": for instructions on how to import an API spec into Postman, see ",(0,i.jsx)(t.a,{href:"https://learning.postman.com/docs/designing-and-developing-your-api/importing-an-api/",children:"Importing an API"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["In Postman you should now have a collection with the name ",(0,i.jsx)(t.code,{children:"Orbital Refuse Collector (ORC) API"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Expected view of Postman collection after import",src:s(1520).A+"",width:"367",height:"263"})}),"\n",(0,i.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Verify that the collection was imported correctly by sending a request. For this example I will send the ",(0,i.jsx)(t.code,{children:"Get a list of satellites"})," request, but you can test with any request."]}),"\n",(0,i.jsxs)(t.li,{children:["Upon receiving a response, verify the following: ",(0,i.jsx)("br",{}),"\r\na. The response status code was 200. ",(0,i.jsx)("br",{}),"\r\nb. You received back either a list of satellite objects in the response body or no response body (depending upon which request you tested). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"\r\n",(0,i.jsx)(t.img,{alt:"Expected view of Postman upon receiving response",src:s(96049).A+"",width:"1714",height:"855"})]}),"\n"]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"NOTE"}),": By default this collection uses a ",(0,i.jsx)(t.a,{href:"https://wiremock.org/",children:"Wiremock"})," server to simulate all endpoints. If you would like to change this behavior, you can modify the ",(0,i.jsx)(t.code,{children:"baseUrl"})," value in the collection's variables."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"baseurl-configuration",children:(0,i.jsx)(t.img,{alt:"baseUrl configuration",src:s(85415).A+"",width:"891",height:"354"})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},55009:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/downloading-spec-45209a15b08582b1080f239198e5de28.png"},85415:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/baseUrl-6a145a26f3eda40c354814ba59325672.png"},96049:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/200-after-initial-request-b5638546cf7726dd6ab97f61c4c588a3.png"}}]);