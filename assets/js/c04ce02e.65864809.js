(self.webpackChunkorc_docs=self.webpackChunkorc_docs||[]).push([[269],{4213:function(e,t,o){var n,r,i;r=[],void 0===(i="function"==typeof(n=function(){"use strict";function t(e,t){return void 0===t?t={autoBom:!1}:"object"!=typeof t&&(console.warn("Deprecated: Expected third argument to be a object"),t={autoBom:!t}),t.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type)?new Blob(["\ufeff",e],{type:e.type}):e}function n(e,t,o){var n=new XMLHttpRequest;n.open("GET",e),n.responseType="blob",n.onload=function(){l(n.response,t,o)},n.onerror=function(){console.error("could not download file")},n.send()}function r(e){var t=new XMLHttpRequest;t.open("HEAD",e,!1);try{t.send()}catch(e){}return 200<=t.status&&299>=t.status}function i(e){try{e.dispatchEvent(new MouseEvent("click"))}catch(n){var t=document.createEvent("MouseEvents");t.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),e.dispatchEvent(t)}}var a="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof o.g&&o.g.global===o.g?o.g:void 0,s=a.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),l=a.saveAs||("object"!=typeof window||window!==a?function(){}:"download"in HTMLAnchorElement.prototype&&!s?function(e,t,o){var s=a.URL||a.webkitURL,l=document.createElement("a");t=t||e.name||"download",l.download=t,l.rel="noopener","string"==typeof e?(l.href=e,l.origin===location.origin?i(l):r(l.href)?n(e,t,o):i(l,l.target="_blank")):(l.href=s.createObjectURL(e),setTimeout((function(){s.revokeObjectURL(l.href)}),4e4),setTimeout((function(){i(l)}),0))}:"msSaveOrOpenBlob"in navigator?function(e,o,a){if(o=o||e.name||"download","string"!=typeof e)navigator.msSaveOrOpenBlob(t(e,a),o);else if(r(e))n(e,o,a);else{var s=document.createElement("a");s.href=e,s.target="_blank",setTimeout((function(){i(s)}))}}:function(e,t,o,r){if((r=r||open("","_blank"))&&(r.document.title=r.document.body.innerText="downloading..."),"string"==typeof e)return n(e,t,o);var i="application/octet-stream"===e.type,l=/constructor/i.test(a.HTMLElement)||a.safari,c=/CriOS\/[\d]+/.test(navigator.userAgent);if((c||i&&l||s)&&"undefined"!=typeof FileReader){var u=new FileReader;u.onloadend=function(){var e=u.result;e=c?e:e.replace(/^data:[^;]*;/,"data:attachment/file;"),r?r.location.href=e:location=e,r=null},u.readAsDataURL(e)}else{var d=a.URL||a.webkitURL,f=d.createObjectURL(e);r?r.location=f:location.href=f,r=null,setTimeout((function(){d.revokeObjectURL(f)}),4e4)}});a.saveAs=l.saveAs=l,e.exports=l})?n.apply(t,r):n)||(e.exports=i)},25383:function(e,t,o){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=n(o(96540)),i=n(o(4213));t.default=function(e){let{url:t,proxy:o}=e;return r.default.createElement("div",{style:{float:"right"},className:"dropdown dropdown--hoverable dropdown--right"},r.default.createElement("button",{className:"export-button button button--sm button--secondary"},"Export"),r.default.createElement("ul",{className:"export-dropdown dropdown__menu"},r.default.createElement("li",null,r.default.createElement("a",{onClick:e=>{e.preventDefault(),(e=>{let t;(e.endsWith("json")||e.endsWith("yaml")||e.endsWith("yml"))&&(t=e.substring(e.lastIndexOf("/")+1)),i.default.saveAs(e,t||"openapi.txt")})(`${t}`)},className:"dropdown__link",href:`${t}`},"OpenAPI Spec"))))}},64624:function(e,t,o){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){const{colorMode:t}=(0,i.useColorMode)(),{logo:o,darkLogo:n}=e,l=()=>"dark"===t?n?.altText??o?.altText:o?.altText,c=(0,a.default)(o?.url),u=(0,a.default)(n?.url);if(o&&n)return r.default.createElement(s.default,{alt:l(),sources:{light:c,dark:u},className:"openapi__logo"});if(o||n)return r.default.createElement(s.default,{alt:l(),sources:{light:c??u,dark:c??u},className:"openapi__logo"});return};const r=n(o(96540)),i=o(34702),a=n(o(29030)),s=n(o(24475))},83438:(e,t,o)=>{"use strict";o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>s,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"orbital-refuse-collector-orc-api","title":"Orbital Refuse Collector (ORC) API","description":"The ORC API is a fictitious API that provides resources to retrieve information about satellites and schedule their decommission.","source":"@site/docs/orbital-refuse-collector-orc-api.info.mdx","sourceDirName":".","slug":"/orbital-refuse-collector-orc-api","permalink":"/docusaurus-openapi-docs/orbital-refuse-collector-orc-api","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"id":"orbital-refuse-collector-orc-api","title":"Orbital Refuse Collector (ORC) API","description":"The ORC API is a fictitious API that provides resources to retrieve information about satellites and schedule their decommission.","sidebar_label":"Introduction","sidebar_position":0,"hide_title":true,"custom_edit_url":null},"sidebar":"ORC","previous":{"title":"Welcome","permalink":"/docusaurus-openapi-docs/"},"next":{"title":"Getting Started","permalink":"/docusaurus-openapi-docs/getting-started"}}');var r=o(74848),i=o(28453),a=(o(64624),o(9303));o(12990),o(79329),o(25383);const s={id:"orbital-refuse-collector-orc-api",title:"Orbital Refuse Collector (ORC) API",description:"The ORC API is a fictitious API that provides resources to retrieve information about satellites and schedule their decommission.",sidebar_label:"Introduction",sidebar_position:0,hide_title:!0,custom_edit_url:null},l=void 0,c={},u=[];function d(e){const t={p:"p",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("span",{className:"theme-doc-version-badge badge badge--secondary",children:"Version: 0.8.0"}),"\n",(0,r.jsx)(a.default,{as:"h1",className:"openapi__heading",children:"Orbital Refuse Collector (ORC) API"}),"\n",(0,r.jsx)(t.p,{children:"The ORC API is a fictitious API that provides resources to retrieve information about satellites and schedule their decommission."})]})}function f(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);